function featureset = fb_makefeatureset(Type, Prefixes)
% function featureset = fb_makefeatureset(Type, Prefixes)
%
% Create feature sets according to Type using Prefixes as sensor
% identifiers. Supported types: see bottom of file.
%
% WARNING: Redundancies are potentially created if multile Prefixes are
% used. E.g. for the feature 'LEN'.
%
% Types TDS, TDL, FDS, FDL are depricated.
%
% -------------------------------------------------------------------------------------------------------
% Scroll down for feature generators!
% -------------------------------------------------------------------------------------------------------
%
% See also: makefeatures.m
%
% Copyright 2007-2009 Oliver Amft
% 
% Example calling procedures:
% 
% Generate std. audio features:
% FeatureString = fb_makefeatureset('FDSNNAUDIO_MV', {'MyMic1', 'MyMic2'});
% 
% Generate HRV features:
% FeatureString = fb_makefeatureset('FDSNNHRV_MVDD', 'MyHR');
% 
% Generate typ. time domain features (any modality, here: capacitive electrodes):
% FeatureString = fb_makefeatureset('TDSNN', {'Cap1', 'Cap2',  'Cap3'});  

% TODO: continuous features for HMM or similar

if ~iscell(Prefixes), Prefixes = { Prefixes }; end;

% time domain macros (do NOT require sliding window)

% 76
TDSMacro = { 'LEN', ...
    'BEG', 'END', 'E-B', 'MIN', 'MAX', 'MINMAX', 'SUM', 'diff_SUM', 'diff_abs_SUM', 'abs_SUM', ...
    'abs_diff_SUM', 'POSSUM', 'NEGSUM', 'diff_POSSUM', 'diff_NEGSUM', 'diff_diff_SUM', 'diff_diff_abs_SUM', ...
    'MEAN', 'VAR', 'FLUC', 'ZCR', 'RMS', 'ENERGY', ...
    'sec14_E-B', 'sec24_E-B', 'sec34_E-B', 'sec44_E-B', ...
    'sec14_MEAN',  'sec24_MEAN', 'sec34_MEAN',  'sec44_MEAN', ...
    'sec14_MIN',  'sec24_MIN', 'sec34_MIN',  'sec44_MIN', ...
    'sec14_MAX', 'sec24_MAX', 'sec34_MAX', 'sec44_MAX', ...
    'sec14_MINMAX', 'sec24_MINMAX',  'sec34_MINMAX', 'sec44_MINMAX', ...
    'sec14_SUM', 'sec24_SUM', 'sec34_SUM', 'sec44_SUM', ...
    'sec14_diff_SUM', 'sec24_diff_SUM',  'sec34_diff_SUM', 'sec44_diff_SUM',...
    'sec14_abs_SUM', 'sec24_abs_SUM', 'sec34_abs_SUM', 'sec44_abs_SUM', ...
    'sec14_POSSUM',  'sec24_POSSUM', 'sec34_POSSUM',  'sec44_POSSUM', ...
    'sec14_NEGSUM', 'sec24_NEGSUM', 'sec34_NEGSUM', 'sec44_NEGSUM', ...
    'sec14_diff_POSSUM', 'sec24_diff_POSSUM', 'sec34_diff_POSSUM', 'sec44_diff_POSSUM', ...
    'sec14_diff_NEGSUM',  'sec24_diff_NEGSUM', 'sec34_diff_NEGSUM',  'sec44_diff_NEGSUM', ...
    'sec14_VAR', 'sec24_VAR', 'sec34_VAR', 'sec44_VAR', ...
    };

% 158
TDLMacro = { 'LEN', ...
    'BEG', 'END', 'E-B', 'MIN', 'MAX', 'MINMAX', 'SUM', 'diff_SUM', 'diff_abs_SUM', 'abs_SUM', ...
    'abs_diff_SUM', 'POSSUM', 'NEGSUM', 'diff_POSSUM', 'diff_NEGSUM', 'diff_diff_SUM', 'diff_diff_abs_SUM', ...
    'MEAN', 'VAR', 'FLUC', 'ZCR', 'RMS', 'ENERGY', ...
    'sec12_E-B', 'sec22_E-B', 'sec12_MIN',  'sec22_MIN', 'sec12_MAX', 'sec22_MAX', 'sec12_MINMAX', 'sec22_MINMAX', ...
    'sec12_MEAN',  'sec22_MEAN', ...
    'sec12_SUM', 'sec22_SUM', 'sec12_diff_SUM', 'sec22_diff_SUM', 'sec12_diff_abs_SUM', 'sec22_diff_abs_SUM', ...
    'sec12_abs_SUM', 'sec22_abs_SUM', 'sec12_abs_diff_SUM', 'sec22_abs_diff_SUM', ...
    'sec12_POSSUM',  'sec22_POSSUM', 'sec12_NEGSUM', 'sec22_NEGSUM', ...
    'sec12_diff_POSSUM', 'sec22_diff_POSSUM', 'sec12_diff_NEGSUM',  'sec22_diff_NEGSUM', ...
    'sec12_diff_diff_SUM', 'sec22_diff_diff_SUM', 'sec12_diff_diff_abs_SUM', 'sec22_diff_diff_abs_SUM', ...
    'sec12_VAR', 'sec22_VAR', 'sec12_FLUC',  'sec22_FLUC', 'sec12_ZCR',  'sec22_ZCR', 'sec12_RMS',  'sec22_RMS', ...
    'sec12_ENERGY', 'sec22_ENERGY', ...
    'sec14_E-B', 'sec24_E-B', 'sec34_E-B', 'sec44_E-B', ...
    'sec14_MEAN',  'sec24_MEAN', 'sec34_MEAN',  'sec44_MEAN', ...
    'sec14_MIN',  'sec24_MIN', 'sec34_MIN',  'sec44_MIN', ...
    'sec14_MAX', 'sec24_MAX', 'sec34_MAX', 'sec44_MAX', ...
    'sec14_MINMAX', 'sec24_MINMAX',  'sec34_MINMAX', 'sec44_MINMAX', ...
    'sec14_SUM', 'sec24_SUM', 'sec34_SUM', 'sec44_SUM', ...
    'sec14_diff_SUM', 'sec24_diff_SUM',  'sec34_diff_SUM', 'sec44_diff_SUM',...
    'sec14_diff_abs_SUM', 'sec24_diff_abs_SUM', 'sec34_diff_abs_SUM', 'sec44_diff_abs_SUM', ...
    'sec14_abs_SUM', 'sec24_abs_SUM', 'sec34_abs_SUM', 'sec44_abs_SUM', ...
    'sec14_abs_diff_SUM', 'sec24_abs_diff_SUM', 'sec34_abs_diff_SUM', 'sec44_abs_diff_SUM', ...
    'sec14_POSSUM',  'sec24_POSSUM', 'sec34_POSSUM',  'sec44_POSSUM', ...
    'sec14_NEGSUM', 'sec24_NEGSUM', 'sec34_NEGSUM', 'sec44_NEGSUM', ...
    'sec14_diff_POSSUM', 'sec24_diff_POSSUM', 'sec34_diff_POSSUM', 'sec44_diff_POSSUM', ...
    'sec14_diff_NEGSUM',  'sec24_diff_NEGSUM', 'sec34_diff_NEGSUM',  'sec44_diff_NEGSUM', ...
    'sec14_diff_diff_SUM', 'sec24_diff_diff_SUM', 'sec34_diff_diff_SUM', 'sec44_diff_diff_SUM', ...
    'sec14_diff_diff_abs_SUM', 'sec24_diff_diff_abs_SUM', 'sec34_diff_diff_abs_SUM', 'sec44_diff_diff_abs_SUM', ...
    'sec14_diff_diff_POSSUM', 'sec24_diff_diff_POSSUM', 'sec34_diff_diff_POSSUM', 'sec44_diff_diff_POSSUM', ...
    'sec14_diff_diff_NEGSUM',  'sec24_diff_diff_NEGSUM', 'sec34_diff_diff_NEGSUM',  'sec44_diff_diff_NEGSUM', ...
    'sec14_VAR', 'sec24_VAR', 'sec34_VAR', 'sec44_VAR', 'sec14_FLUC',  'sec24_FLUC',  'sec34_FLUC',  'sec44_FLUC', ...
    'sec14_ZCR',  'sec24_ZCR', 'sec34_ZCR',  'sec44_ZCR', 'sec14_RMS',  'sec24_RMS', 'sec34_RMS',  'sec44_RMS', ...
    'sec14_ENERGY', 'sec24_ENERGY', 'sec34_ENERGY', 'sec44_ENERGY', ...
    };

% ---------------------------------------------------------------
% frequency domain macros

% non-sliced: 88
FDLNNMacro = { 'LEN', ...
    'acf_MEAN', 'bwidth_MEAN', 'cepstral_MEAN', 'energy_MEAN', ...
    'linbands_MEAN', 'logbands_MEAN', 'lpc_MEAN', 'max_MEAN', 'mfcc_MEAN', ...
    'peaks_MEAN', 'possum_MEAN', 'rolloff10_MEAN', 'rolloff50_MEAN', 'rolloff95_MEAN', ...
    'senergy_MEAN', 'scentroid_MEAN', ...
    'sfluc_MEAN', 'slinfit_MEAN', 'sspread_MEAN', 'sskewness_MEAN', 'skurtosis_MEAN', ...
    'soeratio_MEAN', 'tristimulus_MEAN', ...
    'var_MEAN', 'zcr_MEAN', ...
    };

% sliced: 348
FDLS4Macro = { ...
    'sec14_acf_MEAN', 'sec24_acf_MEAN', 'sec34_acf_MEAN', 'sec44_acf_MEAN', ...
    'sec14_bwidth_MEAN', 'sec24_bwidth_MEAN', 'sec34_bwidth_MEAN', 'sec44_bwidth_MEAN', ...
    'sec14_cepstral_MEAN', 'sec24_cepstral_MEAN', 'sec34_cepstral_MEAN', 'sec44_cepstral_MEAN', ...
    'sec14_energy_MEAN', 'sec24_energy_MEAN', 'sec34_energy_MEAN', 'sec44_energy_MEAN', ...
    'sec14_linbands_MEAN', 'sec24_linbands_MEAN', 'sec34_linbands_MEAN', 'sec44_linbands_MEAN', ...
    'sec14_logbands_MEAN', 'sec24_logbands_MEAN', 'sec34_logbands_MEAN', 'sec44_logbands_MEAN', ...
    'sec14_lpc_MEAN', 'sec24_lpc_MEAN', 'sec34_lpc_MEAN', 'sec44_lpc_MEAN', ...
    'sec14_max_MEAN', 'sec24_max_MEAN', 'sec34_max_MEAN', 'sec44_max_MEAN', ...
    'sec14_mfcc_MEAN', 'sec24_mfcc_MEAN', 'sec34_mfcc_MEAN', 'sec44_mfcc_MEAN', ...
    'sec14_peaks_MEAN', 'sec24_peaks_MEAN', 'sec34_peaks_MEAN', 'sec44_peaks_MEAN', ...
    'sec14_possum_MEAN', 'sec24_possum_MEAN', 'sec34_possum_MEAN', 'sec44_possum_MEAN', ...
    'sec14_rolloff10_MEAN', 'sec24_rolloff10_MEAN', 'sec34_rolloff10_MEAN', 'sec44_rolloff10_MEAN', ...
    'sec14_rolloff50_MEAN', 'sec24_rolloff50_MEAN', 'sec34_rolloff50_MEAN', 'sec44_rolloff50_MEAN', ...
    'sec14_rolloff95_MEAN', 'sec24_rolloff95_MEAN', 'sec34_rolloff95_MEAN', 'sec44_rolloff95_MEAN', ...
    'sec14_senergy_MEAN', 'sec24_senergy_MEAN', 'sec34_senergy_MEAN', 'sec44_senergy_MEAN', ...
    'sec14_scentroid_MEAN', 'sec24_scentroid_MEAN', 'sec34_scentroid_MEAN', 'sec44_scentroid_MEAN', ...
    'sec14_sfluc_MEAN', 'sec24_sfluc_MEAN', 'sec34_sfluc_MEAN', 'sec44_sfluc_MEAN', ...
    'sec14_slinfit_MEAN', 'sec24_slinfit_MEAN', 'sec34_slinfit_MEAN', 'sec44_slinfit_MEAN', ...
    'sec14_sspread_MEAN', 'sec24_sspread_MEAN', 'sec34_sspread_MEAN', 'sec44_sspread_MEAN', ...
    'sec14_sskewness_MEAN', 'sec24_sskewness_MEAN', 'sec34_sskewness_MEAN', 'sec44_sskewness_MEAN', ...
    'sec14_skurtosis_MEAN', 'sec24_skurtosis_MEAN', 'sec34_skurtosis_MEAN', 'sec44_skurtosis_MEAN', ...
    'sec14_soeratio_MEAN', 'sec24_soeratio_MEAN', 'sec34_soeratio_MEAN', 'sec44_soeratio_MEAN', ...
    'sec14_tristimulus_MEAN', 'sec24_tristimulus_MEAN', 'sec34_tristimulus_MEAN', 'sec44_tristimulus_MEAN', ...
    'sec14_var_MEAN', 'sec24_var_MEAN', 'sec34_var_MEAN', 'sec44_var_MEAN', ...
    'sec14_zcr_MEAN', 'sec24_zcr_MEAN', 'sec34_zcr_MEAN', 'sec44_zcr_MEAN', ...
    };

FDLS3Macro = { ...
    'sec13_acf_MEAN', 'sec23_acf_MEAN', 'sec33_acf_MEAN', ...
    'sec13_bwidth_MEAN', 'sec23_bwidth_MEAN', 'sec33_bwidth_MEAN', ...
    'sec13_cepstral_MEAN', 'sec23_cepstral_MEAN', 'sec33_cepstral_MEAN', ...
    'sec13_energy_MEAN', 'sec23_energy_MEAN', 'sec33_energy_MEAN', ...
    'sec13_linbands_MEAN', 'sec23_linbands_MEAN', 'sec33_linbands_MEAN', ...
    'sec13_logbands_MEAN', 'sec23_logbands_MEAN', 'sec33_logbands_MEAN', ...
    'sec13_lpc_MEAN', 'sec23_lpc_MEAN', 'sec33_lpc_MEAN', ...
    'sec13_max_MEAN', 'sec23_max_MEAN', 'sec33_max_MEAN', ...
    'sec13_mfcc_MEAN', 'sec23_mfcc_MEAN', 'sec33_mfcc_MEAN', ...
    'sec13_peaks_MEAN', 'sec23_peaks_MEAN', 'sec33_peaks_MEAN', ...
    'sec13_possum_MEAN', 'sec23_possum_MEAN', 'sec33_possum_MEAN', ...
    'sec13_rolloff10_MEAN', 'sec23_rolloff10_MEAN', 'sec33_rolloff10_MEAN', ...
    'sec13_rolloff50_MEAN', 'sec23_rolloff50_MEAN', 'sec33_rolloff50_MEAN', ...
    'sec13_rolloff95_MEAN', 'sec23_rolloff95_MEAN', 'sec33_rolloff95_MEAN', ...
    'sec13_senergy_MEAN', 'sec23_senergy_MEAN', 'sec33_senergy_MEAN',  ...
    'sec13_scentroid_MEAN', 'sec23_scentroid_MEAN', 'sec33_scentroid_MEAN',  ...
    'sec13_sfluc_MEAN', 'sec23_sfluc_MEAN', 'sec33_sfluc_MEAN', ...
    'sec13_slinfit_MEAN', 'sec23_slinfit_MEAN', 'sec33_slinfit_MEAN', ...
    'sec13_sspread_MEAN', 'sec23_sspread_MEAN', 'sec33_sspread_MEAN', ...
    'sec13_sskewness_MEAN', 'sec23_sskewness_MEAN', 'sec33_sskewness_MEAN', ...
    'sec13_skurtosis_MEAN', 'sec23_skurtosis_MEAN', 'sec33_skurtosis_MEAN', ...
    'sec13_soeratio_MEAN', 'sec23_soeratio_MEAN', 'sec33_soeratio_MEAN', ...
    'sec13_tristimulus_MEAN', 'sec23_tristimulus_MEAN', 'sec33_tristimulus_MEAN', ...
    'sec13_var_MEAN', 'sec23_var_MEAN', 'sec33_var_MEAN', ...
    'sec13_zcr_MEAN', 'sec23_zcr_MEAN', 'sec33_zcr_MEAN', ...
    };

% total: 436
FDL = [ FDLNNMacro FDLS4Macro ];

% total: 697
FDLPlus = [ FDLNNMacro FDLS3Macro FDLS4Macro ];


FDSNNMacro = { 'LEN', ...
    'acf_MEAN', 'bwidth_MEAN', 'cepstral_MEAN', 'scentroid_MEAN', ...
    'logbands_MEAN', 'lpc_MEAN', 'mfcc_MEAN', 'rolloff95_MEAN', ...
    'possum_MEAN', 'energy_MEAN', 'var_MEAN', 'zcr_MEAN', ...
    'sfluc_MEAN', 'sspread_MEAN', 'sskewness_MEAN', 'skurtosis_MEAN', ...
    'soeratio_MEAN', 'tristimulus_MEAN', ...
    };
FDSS4Macro = { ...
    'sec14_acf_MEAN', 'sec24_acf_MEAN', 'sec34_acf_MEAN', 'sec44_acf_MEAN', ...
    'sec14_logbands_MEAN', 'sec24_logbands_MEAN', 'sec34_logbands_MEAN', 'sec44_logbands_MEAN', ...
    'sec14_cepstral_MEAN', 'sec24_cepstral_MEAN', 'sec34_cepstral_MEAN', 'sec44_cepstral_MEAN', ...
    'sec14_mfcc_MEAN', 'sec24_mfcc_MEAN', 'sec34_mfcc_MEAN', 'sec44_mfcc_MEAN', ...
    'sec14_rolloff95_MEAN', 'sec24_rolloff95_MEAN', 'sec34_rolloff95_MEAN', 'sec44_rolloff95_MEAN', ...
    };

% 252
FDS = [ FDSNNMacro FDSS4Macro ];











% -----------------------------------------------------------------------
% -----------------------------------------------------------------------
% ------ second generation feature generator  -------
% -----------------------------------------------------------------------
% -----------------------------------------------------------------------

% section prefixes
FFMap_PrefixSec2 = { 'sec12', 'sec22' };
FFMap_PrefixSec3 = { 'sec13', 'sec23', 'sec33' };
FFMap_PrefixSec4 = { 'sec14', 'sec24', 'sec34', 'sec44' };
FFMap_PrefixSec6 = { 'sec16', 'sec26', 'sec36', 'sec46', 'sec56', 'sec66' };
FFMap_PrefixSec8 = { 'sec18', 'sec28', 'sec38', 'sec48', 'sec58', 'sec68', 'sec78', 'sec88' };

% feature suffixes
FFMap_SuffixM = { 'MEAN' };
FFMap_SuffixMV = { 'MEAN', 'VAR' };
FFMap_SuffixMVD = { 'MEAN', 'VAR', 'DMEAN' };
FFMap_SuffixMVDD = { 'MEAN', 'VAR', 'DMEAN', 'DDMEAN' };

% basic operators
% FFMap_FSec1 = { ...
% 	'acf', 'bwidth', 'cepstral', 'energy', 'linbands', 'logbands', 'lpc', 'max', 'mfcc', 'peaks', 'possum', ...
% 	'rolloff10', 'rolloff50', 'rolloff95', 'senergy', 'scentroid', 'sfluc', 'slinfit', 'sspread', 'sskewness', ...
% 	'skurtosis', 'soeratio', 'tristimulus', 'var', 'zcr' };
% FFMap_AUDIO = { ...
%     'acf', 'bwidth', 'cepstral', 'energy', 'linbands', 'logbands', 'lpc', 'lpcc', 'lpcm' ...
%     'max', 'mfcc', 'peaks', 'possum', ...
%     'rolloff10', 'rolloff50', 'rolloff95', 'senergy', 'scentroid', 'sfluc', 'slinfit', 'sspread', 'sskewness', ...
%     'skurtosis', 'soeratio', 'tristimulus', 'var', 'levelmn_zcr' };
FFMap_AUDIO = { ...
    'acf', 'bwidth', 'cepstral', 'energy', 'linbands', 'logbands', 'lpc', 'lpcc', 'lpcm' ...
    'max', 'mfcc', 'peaks', 'possum', ...
    'rolloff10', 'rolloff50', 'rolloff95', 'senergy', 'scentroid', 'sfluc', 'slinfit', 'sspread', 'sskewness', ...
    'skurtosis', 'soeratio', 'tristimulus', 'var', 'zcr', 'levelmn_zcr' };

% Spectral for physiological signals without HRV (mk)
% 20090206 Added mean, fracdim (mk)
FFMap_PHYS = { ...
    'acf', 'bwidth', 'cepstral', 'energy', 'linbands', 'logbands', 	'max', 'peaks', 'possum', ...
    'senergy', 'scentroid', 'sfluc', 'slinfit', 'sspread', 'sskewness', ...
    'skurtosis', 'soeratio', 'tristimulus', 'var', 'levelmn_zcr', ...
    'dwtenergy', 'dwtrms', 'frsa', 'fracdim' };
% HRV features are seperated as it requires a min. length of the signal and
% may cause problems during computation of too small windows (mk)
FFMap_HRV = { 'detrend_ffthrv', 'dwthrv', 'cwthrv' };

% Time domain feature set for small sets
FFMap_TDS = { ...
    'BEG', 'END', 'E-B', 'MIN', 'MAX', 'MINMAX', ...
    'SUM', 'diff_SUM', 'diff_abs_SUM', 'abs_SUM',  ...
    'POSSUM', 'NEGSUM', ...
    'MEAN', 'VAR',  ...
    };

% Time domain feature set for medium sets
FFMap_TDM = { ...
    'BEG', 'END', 'E-B', 'MIN', 'MAX', 'MINMAX', ...
    'SUM', 'diff_SUM', 'diff_abs_SUM', 'abs_SUM', 'abs_diff_SUM', 'diff_diff_SUM', 'diff_diff_abs_SUM', ...
    'POSSUM', 'NEGSUM', 'diff_POSSUM', 'diff_NEGSUM', 'diff_diff_POSSUM', 'diff_diff_NEGSUM', ...
    'MEAN', 'VAR', 'FLUC', 'ZCR', 'RMS', 'ENERGY', ...
    };

FFMap_SW1 = { }; % TODO


% -----------------------------------------------------------------------
% create features for all prefixes (i.e. sensor sources)
% -----------------------------------------------------------------------

featureset = {};  % yes, it is growing :-(
for f = 1:length(Prefixes)
    thisPrefix = { [ Prefixes{f} '_' ] };

    switch Type
        % 		case 'TDS'  % time domain small
        % 			featureset = [featureset   cellappend(repmat(thisPrefix, 1, length(TDSMacro)), TDSMacro, 2)  ];
        % 		case 'TDL'  % time domain large
        % 			featureset = [featureset   cellappend(repmat(thisPrefix, 1, length(TDLMacro)), TDLMacro, 2)  ];
        %
        % 		case 'FDS'  % frequency domain small
        % 			featureset = [featureset   cellappend(repmat(thisPrefix, 1, length(FDS)), FDS, 2)  ];
        % 		case 'FDL'  % frequency domain large
        % 			featureset = [featureset   cellappend(repmat(thisPrefix, 1, length(FDL)), FDL, 2)  ];
        % 		case 'FDLPlus'  % frequency domain large
        % 			featureset = [featureset   cellappend(repmat(thisPrefix, 1, length(FDLPlus)), FDLPlus, 2)  ];



        case 'TDSNN'
            FFMap_NNMacro = [ 'LEN',  FFMap_TDS ];
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];

        case 'TDMNN'
            FFMap_NNMacro = [ 'LEN',  FFMap_TDM ];
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];




            %
            %         case 'TDMS3MV'
            %             fprintf('\n%s: WARNING: Feature set %s is depricated.', mfilename, Type);
            %             error('Feature set %s is depricated.', Type');
            %
            %             FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_SW1, FFMap_SuffixMV) ];
            % 			FFMap_S3Macro = fb_featurestringprod( FFMap_PrefixSec3, FFMap_SW1, FFMap_SuffixMV );
            %
            % 			featureset = [ featureset, ...
            % 				fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
            % 				fb_featurestringprod(Prefixes{f}, FFMap_S3Macro) ];

            
        case 'TDSS2'    % small set
            FFMap_NNMacro = [ 'LEN',  FFMap_TDS ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec2, FFMap_TDS );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];

        case 'TDSS3'    % small set
            FFMap_NNMacro = [ 'LEN',  FFMap_TDS ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec3, FFMap_TDS );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];


        case 'TDMS3'    % medium set
            FFMap_NNMacro = [ 'LEN',  FFMap_TDM ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec3, FFMap_TDM );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];


        case 'TDMS4'    % medium set
            FFMap_NNMacro = [ 'LEN',  FFMap_TDM ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec4, FFMap_TDM );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];




            % -------------------------------------------------------------------------------------------------------------------
            % Spectral features
            % -------------------------------------------------------------------------------------------------------------------

        case 'FDSNNAUDIO'
            FFMap_NNMacro = fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixMVDD );
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];
        case 'FDSNNAUDIO_M'
            FFMap_NNMacro = fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixM );
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];
        case 'FDSNNAUDIO_MV'
            FFMap_NNMacro = fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixMV );
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];

            % Physiological feature set without spectral HRV features (mk)
        case 'FDSNNPHYS_MVDD'
            FFMap_NNMacro = fb_featurestringprod( FFMap_PHYS, FFMap_SuffixMVDD );
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];
            % Extra feature set for spectral HRV (mk)
        case 'FDSNNHRV_MVDD'
            FFMap_NNMacro = fb_featurestringprod( FFMap_HRV, FFMap_SuffixMVDD );
            featureset = [ featureset,   fb_featurestringprod(Prefixes{f}, FFMap_NNMacro) ];





            % 		case 'FDMS3'  % 1393 (1409)
            % 			FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_FSec1, FFMap_SuffixMVDD) ];
            % 			FFMap_S3Macro = fb_featurestringprod( FFMap_PrefixSec3, FFMap_FSec1, FFMap_SuffixMVDD );
            %
            % 			featureset = [ featureset, ...
            % 				fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
            % 				fb_featurestringprod(Prefixes{f}, FFMap_S3Macro) ];

        case 'FDMS3'  % as FDMS3 version 1, but section features version 2 (no diffdiffs)
            FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixMVD) ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec3, FFMap_AUDIO, FFMap_SuffixMVD );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];
        case 'FDMS3_M'
            FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixM) ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec3, FFMap_AUDIO, FFMap_SuffixM );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];


        case 'FDMS4'
            FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixMVD) ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec4, FFMap_AUDIO, FFMap_SuffixMVD );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];
        case 'FDMS4_M'
            FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixM) ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec4, FFMap_AUDIO, FFMap_SuffixM );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];

        case 'FDMS6'
            FFMap_NNMacro = [ 'LEN',  fb_featurestringprod( FFMap_AUDIO, FFMap_SuffixMVD) ];
            FFMap_SXMacro = fb_featurestringprod( FFMap_PrefixSec6, FFMap_AUDIO, FFMap_SuffixMVD );

            featureset = [ featureset, ...
                fb_featurestringprod(Prefixes{f}, FFMap_NNMacro), ...
                fb_featurestringprod(Prefixes{f}, FFMap_SXMacro) ];

        otherwise
            error('Type %s not supported.', Type);
    end;
end; % for f
